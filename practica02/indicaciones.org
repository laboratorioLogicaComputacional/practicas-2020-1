#+LATEX_CLASS: article
#+LANGUAGE: es
#+LATEX_HEADER: \usepackage[AUTO]{babel}
#+LATEX_HEADER: \usepackage{fancyvrb}
#+OPTIONS: toc:nil
#+DATE:
#+AUTHOR: Dr. Miguel Carrillo Barajas \\
#+AUTHOR: Sara Doris Montes Incin \\
#+AUTHOR: Mauricio Esquivel Reyes \\
#+TITLE: Práctica 02 \\
#+TITLE: Lógica Computacional \\
#+TITLE: Universidad Nacional Autónoma de México


* Lógica proposicional

Consideremos la siguiente representación de la lógica proposicional:

#+begin_src haskell
-- Tipo de datos para indices de variables
type Indice = Int

-- Tipo de datos para formulas de la PL
data PL = Top | Bot | Var Indice 
        | Oneg PL | Oand PL PL 
        | Oor PL PL | Oimp PL PL deriving (Eq,Show,Ord)

-- Tipo de datos para modelos
type Modelo = [Indice]
#+end_src

** Formas Normales
*** Elimina disyunciones
Dada una fórmula cambiar las instancias de las implicaciones.
 * Main> eliminaDisy (Oimp (Var 1) (Var 2))
 Oor (Oneg (Var 1)) (Var 2)
 * Main> eliminaDisy (Oand Top Bot)
 Oand Top Bot

*** NNF
**** A NNF 
Dada una fórmula de la lógica proposicional se debe regresar su traducción a forma normal negativa.
 * Main> toNNF (Oimp (Oneg $ (Oand (Var 1)(Var 2))) (Oor (Var 3)(Oneg $ Top)))
 Oor (Oand (Var 1) (Var 2)) (Oor (Var 3) Bot)
 * Main> toNNF (Oand (Oneg $ (Oand (Var 1)(Var 2))) (Oneg $ Oor (Var 3)(Oneg $ Top)))
 Oand (Oor (Oneg (Var 1)) (Oneg (Var 2))) (Oand (Oneg (Var 3)) Top)

**** Es NNF
Dada una fórmula de la lógica proposicional verificar si se encuentra en forma normal negativa.
 * Main> esNNF (Oneg $ (Oand (Var 1) (Var 2)))
 False
 * Main> esNNF (Oor (Oneg $ Var 1)(Oneg $ Var 2))
 True

*** CNF
**** A CNF
Dada una fórmula en NNF, dar su CNF, tal que sean lógicamente equivalentes.

**** Es CNF
Dada una fórmula de la lógica proposicional revisa si se encuentra en forma normal conjutiva.
Ejemplos:
 * Main> esCNF (Oimp (Var 1) (Oand (Var 2)(Oor (Var 3)(Var 4))))
 False
 * Main> esCNF (Oand (Oor (Var 2) (Oneg $ Var 2))(Oor (Var 4)(Oor (Var 5)(Var 7)))) 
 True

*** DNF 
**** Es término
Dada una fórmula de la lógica proposicional revisa si es un término. 
Ejemplos:
 * Main> esTermino $ Oand (Var 1) (Oor (Var 2) (Var 3))
 False
 * Main> esTermino $ Oand (Oand (Var 1) (Var 2)) (Oneg $ Var 3)
 True

**** Es DNF
Dada una fórmula de la LP revisa si se encuentra en forma normal disyuntiva
Ejemplos:
 * Main> esDNF (Oor (Oand (Var 2) (Oneg $ Var 2))(Oand (Var 4)(Oand (Var 5)(Var 7)))) 
 True
 * Main> esDNF (Oor (Oand (Var 2) (Oneg $ Var 2))(Oand (Var 4)(Oor (Var 5)(Var 7))))
 False

** Semántica
*** Satisfacibilidad con modelos
Dado un modelo y una fórmula de la lógica proposicional se debe indicar si es satisfacible. 
 * Main> satMod [1] (Oimp (Var 1)(Var 2))
 False
 * Main> satMod [1,2] (Oand (Var 1) (Oor (Var 2) (Var 3)))
 True 

** Deducción Natural
*** Reglas faltantes

En el archivo DeduccionNatural.hs implementar las siguientes funciones:

1. checkIdis1
2. checkIdis2
3. checkE2neg

*** Ejercicios

Dar la deducción de los siguientes ejercicios
